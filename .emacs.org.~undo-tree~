(undo-tree-save-format-version . 1)
"a41a8c1186e01e212f73109e38060866a964df6a"
[nil nil nil nil (26419 29791 717935 365000) 0 nil]
([nil nil ((#("lisp :tangle ./init.el" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 6 15 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 15 20 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 20 21 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 21 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . 2539) (undo-tree-id295 . -20) (undo-tree-id296 . -20) (undo-tree-id297 . -20) (undo-tree-id298 . -20) (undo-tree-id299 . -20) (undo-tree-id300 . -20) (undo-tree-id301 . -20) (undo-tree-id302 . -20) (undo-tree-id303 . -20) (undo-tree-id304 . -20) (undo-tree-id305 . -20) (undo-tree-id306 . -21) (undo-tree-id307 . -21) (undo-tree-id308 . -21) (undo-tree-id309 . -21) (undo-tree-id310 . -21) (undo-tree-id311 . -21) (undo-tree-id312 . -21) (undo-tree-id313 . -21) (undo-tree-id314 . -21) (undo-tree-id315 . -21) (undo-tree-id316 . -21) (undo-tree-id317 . -22) (undo-tree-id318 . -22) (undo-tree-id319 . -22) (undo-tree-id320 . -22) (undo-tree-id321 . -22) (undo-tree-id322 . -22) (undo-tree-id323 . -22) (undo-tree-id324 . -22) (undo-tree-id325 . -22) (undo-tree-id326 . -22) (undo-tree-id327 . -22) (undo-tree-id328 . -21) (undo-tree-id329 . -21) (undo-tree-id330 . -21) (undo-tree-id331 . -21) (undo-tree-id332 . -21) (undo-tree-id333 . -21) (undo-tree-id334 . -21) (undo-tree-id335 . -21) (undo-tree-id336 . -21) (undo-tree-id337 . -21) (undo-tree-id338 . -21) (undo-tree-id339 . -20) (undo-tree-id340 . -20) (undo-tree-id341 . -20) (undo-tree-id342 . -20) (undo-tree-id343 . -20) (undo-tree-id344 . -20) (undo-tree-id345 . -20) (undo-tree-id346 . -20) (undo-tree-id347 . -20) (undo-tree-id348 . -20) (undo-tree-id349 . -20) (undo-tree-id350 . -15) (undo-tree-id351 . -15) (undo-tree-id352 . -15) (undo-tree-id353 . -15) (undo-tree-id354 . -15) (undo-tree-id355 . -15) (undo-tree-id356 . -15) (undo-tree-id357 . -15) (undo-tree-id358 . -15) (undo-tree-id359 . -15) (undo-tree-id360 . -15) (undo-tree-id361 . -15) (undo-tree-id362 . -15) (undo-tree-id363 . -15) (undo-tree-id364 . -15) (undo-tree-id365 . -15) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (#(" emacs-lisp :tangle ./init.el" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 7 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 7 13 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 13 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 22 27 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 27 29 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 1339) (#(" emacs-lisp :tangle ./init.el" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 7 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 7 13 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 13 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 22 27 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 27 28 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 28 29 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 800) (#(" emacs-lisp :tangle ./init.el" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 7 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 7 13 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 13 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 22 27 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 27 29 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 172) (37 . 54) (#(";" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 37) (33 . 38) (#("o" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 33) (33 . 34) (#("o" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 33) (29 . 34) (#("s" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 29) (7 . 30) (#("e" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 7) (7 . 8) (#("HERTY" 0 1 (face org-meta-line font-lock-fontified t fontified nil) 1 2 (face org-meta-line font-lock-fontified t fontified nil) 2 3 (face org-meta-line font-lock-fontified t fontified nil) 3 4 (face org-meta-line font-lock-fontified t fontified nil) 4 5 (face org-meta-line font-lock-fontified t fontified nil)) . 7) (4 . 12) (#("OR" 0 1 (face org-meta-line font-lock-fontified t fontified nil) 1 2 (face org-meta-line font-lock-fontified t fontified nil)) . 4) (4 . 6) (#("r" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 4) (1 . 5) (1 . 2) (1 . 2) (#("
" 0 1 (fontified nil)) . 9) (9 . 10) (t 26419 26791 206615 929000)) ((#("
" 0 1 (fontified nil)) . 9) (9 . 10) (#("
" 0 1 (fontified nil)) . 1) (#("
" 0 1 (fontified nil)) . 1) (#("#+" 0 2 (face org-meta-line font-lock-fontified t fontified nil)) . 1) (#("Pr" 0 1 (face org-meta-line font-lock-fontified t fontified nil) 1 2 (face org-meta-line font-lock-fontified t fontified nil)) . 3) (4 . 5) (#("OR" 0 1 (face org-meta-line font-lock-fontified t fontified nil) 1 2 (face org-meta-line font-lock-fontified t fontified nil)) . 4) (4 . 6) (#("ROPHERTY" 0 3 (face org-meta-line font-lock-fontified t fontified nil) 3 4 (face org-meta-line font-lock-fontified t fontified nil) 4 5 (face org-meta-line font-lock-fontified t fontified nil) 5 6 (face org-meta-line font-lock-fontified t fontified nil) 6 7 (face org-meta-line font-lock-fontified t fontified nil) 7 8 (face org-meta-line font-lock-fontified t fontified nil)) . 4) (7 . 12) (#("e" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 7) (7 . 8) (#("ERTY: header" 0 12 (face org-meta-line font-lock-fontified t fontified nil)) . 7) (#("-args: " 0 7 (face org-meta-line font-lock-fontified t fontified nil)) . 19) (#("emas" 0 3 (face org-meta-line font-lock-fontified t fontified nil) 3 4 (face org-meta-line font-lock-fontified t fontified nil)) . 26) (29 . 30) (#("cs-lo" 0 4 (face org-meta-line font-lock-fontified t fontified nil) 4 5 (face org-meta-line font-lock-fontified t fontified nil)) . 29) (33 . 34) (#("o" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 33) (33 . 34) (#("isp " 0 4 (face org-meta-line font-lock-fontified t fontified nil)) . 33) (#(";" 0 1 (face org-meta-line font-lock-fontified t fontified nil)) . 37) (37 . 38) (#(":tangle ./init.el" 0 17 (face org-meta-line font-lock-fontified t fontified t)) . 37) (172 . 201) (800 . 829) (1339 . 1368) (2539 . 2561)) (26419 29798 955199 138000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2532) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2533) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2534) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2535) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2536) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2537) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (#("-" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2538) (undo-tree-id906 . -1) 2539) nil (26419 29839 548737 341000) 0 nil])
([nil nil ((#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3019) (undo-tree-id880 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3020) (undo-tree-id881 . -1) 3021) nil (26419 29839 548723 549000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3014) (undo-tree-id879 . -5) 3019) nil (26419 29839 548721 692000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3005) (undo-tree-id878 . -9) 3014) nil (26419 29839 548720 499000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2999) (undo-tree-id877 . -6) 3005) nil (26419 29839 548719 293000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2993) (undo-tree-id876 . -6) 2999) nil (26419 29839 548718 119000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2992) (undo-tree-id875 . -1) 2993) nil (26419 29839 548716 937000) 0 nil])
([nil nil ((#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3345) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) 3346) nil (26419 29839 548715 282000) 0 nil])
([nil nil ((#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3344) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) 3345) nil (26419 29839 548707 169000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3339) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5) (undo-tree-id759 . -5) (undo-tree-id760 . -5) (undo-tree-id761 . -5) (undo-tree-id762 . -5) (undo-tree-id763 . -5) (undo-tree-id764 . -5) (undo-tree-id765 . -5) (undo-tree-id766 . -5) (undo-tree-id767 . -5) (undo-tree-id768 . -5) (undo-tree-id769 . -5) (undo-tree-id770 . -5) (undo-tree-id771 . -5) (undo-tree-id772 . -5) (undo-tree-id773 . -5) (undo-tree-id774 . -5) (undo-tree-id775 . -5) (undo-tree-id776 . -5) (undo-tree-id777 . -5) (undo-tree-id778 . -5) (undo-tree-id779 . -5) (undo-tree-id780 . -5) (undo-tree-id781 . -5) (undo-tree-id782 . -5) (undo-tree-id783 . -5) (undo-tree-id784 . -5) (undo-tree-id785 . -5) (undo-tree-id786 . -5) (undo-tree-id787 . -5) (undo-tree-id788 . -5) (undo-tree-id789 . -5) (undo-tree-id790 . -5) (undo-tree-id791 . -5) (undo-tree-id792 . -5) (undo-tree-id793 . -5) (undo-tree-id794 . -5) (undo-tree-id795 . -5) (undo-tree-id796 . -5) (undo-tree-id797 . -5) (undo-tree-id798 . -5) (undo-tree-id799 . -5) (undo-tree-id800 . -5) (undo-tree-id801 . -5) (undo-tree-id802 . -5) (undo-tree-id803 . -5) (undo-tree-id804 . -5) (undo-tree-id805 . -5) (undo-tree-id806 . -5) (undo-tree-id807 . -5) (undo-tree-id808 . -5) (undo-tree-id809 . -5) (undo-tree-id810 . -5) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (undo-tree-id813 . -5) (undo-tree-id814 . -5) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -5) (undo-tree-id818 . -5) (undo-tree-id819 . -5) (undo-tree-id820 . -5) (undo-tree-id821 . -5) 3344) nil (26419 29839 548679 226000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3330) (undo-tree-id677 . -9) (undo-tree-id678 . -9) (undo-tree-id679 . -9) (undo-tree-id680 . -9) (undo-tree-id681 . -9) (undo-tree-id682 . -9) (undo-tree-id683 . -9) (undo-tree-id684 . -9) (undo-tree-id685 . -9) (undo-tree-id686 . -9) (undo-tree-id687 . -9) (undo-tree-id688 . -9) (undo-tree-id689 . -9) (undo-tree-id690 . -9) (undo-tree-id691 . -9) (undo-tree-id692 . -9) (undo-tree-id693 . -9) (undo-tree-id694 . -9) (undo-tree-id695 . -9) (undo-tree-id696 . -9) (undo-tree-id697 . -9) (undo-tree-id698 . -9) (undo-tree-id699 . -9) (undo-tree-id700 . -9) (undo-tree-id701 . -9) (undo-tree-id702 . -9) (undo-tree-id703 . -9) (undo-tree-id704 . -9) (undo-tree-id705 . -9) (undo-tree-id706 . -9) (undo-tree-id707 . -9) (undo-tree-id708 . -9) (undo-tree-id709 . -9) (undo-tree-id710 . -9) (undo-tree-id711 . -9) (undo-tree-id712 . -9) (undo-tree-id713 . -9) (undo-tree-id714 . -9) (undo-tree-id715 . -9) (undo-tree-id716 . -9) (undo-tree-id717 . -9) (undo-tree-id718 . -9) (undo-tree-id719 . -9) (undo-tree-id720 . -9) (undo-tree-id721 . -9) (undo-tree-id722 . -9) (undo-tree-id723 . -9) (undo-tree-id724 . -9) (undo-tree-id725 . -9) (undo-tree-id726 . -9) (undo-tree-id727 . -9) (undo-tree-id728 . -9) (undo-tree-id729 . -9) (undo-tree-id730 . -9) (undo-tree-id731 . -9) (undo-tree-id732 . -9) (undo-tree-id733 . -9) (undo-tree-id734 . -9) (undo-tree-id735 . -9) (undo-tree-id736 . -9) (undo-tree-id737 . -9) (undo-tree-id738 . -9) (undo-tree-id739 . -9) (undo-tree-id740 . -9) (undo-tree-id741 . -9) (undo-tree-id742 . -9) (undo-tree-id743 . -9) (undo-tree-id744 . -9) (undo-tree-id745 . -9) (undo-tree-id746 . -9) (undo-tree-id747 . -9) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) (undo-tree-id753 . -9) (undo-tree-id754 . -9) 3339) nil (26419 29839 548643 798000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3324) (undo-tree-id588 . -6) (undo-tree-id589 . -6) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) (undo-tree-id595 . -6) (undo-tree-id596 . -6) (undo-tree-id597 . -6) (undo-tree-id598 . -6) (undo-tree-id599 . -6) (undo-tree-id600 . -6) (undo-tree-id601 . -6) (undo-tree-id602 . -6) (undo-tree-id603 . -6) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -6) (undo-tree-id608 . -6) (undo-tree-id609 . -6) (undo-tree-id610 . -6) (undo-tree-id611 . -6) (undo-tree-id612 . -6) (undo-tree-id613 . -6) (undo-tree-id614 . -6) (undo-tree-id615 . -6) (undo-tree-id616 . -6) (undo-tree-id617 . -6) (undo-tree-id618 . -6) (undo-tree-id619 . -6) (undo-tree-id620 . -6) (undo-tree-id621 . -6) (undo-tree-id622 . -6) (undo-tree-id623 . -6) (undo-tree-id624 . -6) (undo-tree-id625 . -6) (undo-tree-id626 . -6) (undo-tree-id627 . -6) (undo-tree-id628 . -6) (undo-tree-id629 . -6) (undo-tree-id630 . -6) (undo-tree-id631 . -6) (undo-tree-id632 . -6) (undo-tree-id633 . -6) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id636 . -6) (undo-tree-id637 . -6) (undo-tree-id638 . -6) (undo-tree-id639 . -6) (undo-tree-id640 . -6) (undo-tree-id641 . -6) (undo-tree-id642 . -6) (undo-tree-id643 . -6) (undo-tree-id644 . -6) (undo-tree-id645 . -6) (undo-tree-id646 . -6) (undo-tree-id647 . -6) (undo-tree-id648 . -6) (undo-tree-id649 . -6) (undo-tree-id650 . -6) (undo-tree-id651 . -6) (undo-tree-id652 . -6) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (undo-tree-id655 . -6) (undo-tree-id656 . -6) (undo-tree-id657 . -6) (undo-tree-id658 . -6) (undo-tree-id659 . -6) (undo-tree-id660 . -6) (undo-tree-id661 . -6) (undo-tree-id662 . -6) (undo-tree-id663 . -6) (undo-tree-id664 . -6) (undo-tree-id665 . -6) (undo-tree-id666 . -6) (undo-tree-id667 . -6) (undo-tree-id668 . -6) (undo-tree-id669 . -6) (undo-tree-id670 . -6) (undo-tree-id671 . -6) (undo-tree-id672 . -6) (undo-tree-id673 . -6) (undo-tree-id674 . -6) (undo-tree-id675 . -6) (undo-tree-id676 . -6) 3330) nil (26419 29839 548602 535000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3318) (undo-tree-id488 . -6) (undo-tree-id489 . -6) (undo-tree-id490 . -6) (undo-tree-id491 . -6) (undo-tree-id492 . -6) (undo-tree-id493 . -6) (undo-tree-id494 . -6) (undo-tree-id495 . -6) (undo-tree-id496 . -6) (undo-tree-id497 . -6) (undo-tree-id498 . -6) (undo-tree-id499 . -6) (undo-tree-id500 . -6) (undo-tree-id501 . -6) (undo-tree-id502 . -6) (undo-tree-id503 . -6) (undo-tree-id504 . -6) (undo-tree-id505 . -6) (undo-tree-id506 . -6) (undo-tree-id507 . -6) (undo-tree-id508 . -6) (undo-tree-id509 . -6) (undo-tree-id510 . -6) (undo-tree-id511 . -6) (undo-tree-id512 . -6) (undo-tree-id513 . -6) (undo-tree-id514 . -6) (undo-tree-id515 . -6) (undo-tree-id516 . -6) (undo-tree-id517 . -6) (undo-tree-id518 . -6) (undo-tree-id519 . -6) (undo-tree-id520 . -6) (undo-tree-id521 . -6) (undo-tree-id522 . -6) (undo-tree-id523 . -6) (undo-tree-id524 . -6) (undo-tree-id525 . -6) (undo-tree-id526 . -6) (undo-tree-id527 . -6) (undo-tree-id528 . -6) (undo-tree-id529 . -6) (undo-tree-id530 . -6) (undo-tree-id531 . -6) (undo-tree-id532 . -6) (undo-tree-id533 . -6) (undo-tree-id534 . -6) (undo-tree-id535 . -6) (undo-tree-id536 . -6) (undo-tree-id537 . -6) (undo-tree-id538 . -6) (undo-tree-id539 . -6) (undo-tree-id540 . -6) (undo-tree-id541 . -6) (undo-tree-id542 . -6) (undo-tree-id543 . -6) (undo-tree-id544 . -6) (undo-tree-id545 . -6) (undo-tree-id546 . -6) (undo-tree-id547 . -6) (undo-tree-id548 . -6) (undo-tree-id549 . -6) (undo-tree-id550 . -6) (undo-tree-id551 . -6) (undo-tree-id552 . -6) (undo-tree-id553 . -6) (undo-tree-id554 . -6) (undo-tree-id555 . -6) (undo-tree-id556 . -6) (undo-tree-id557 . -6) (undo-tree-id558 . -6) (undo-tree-id559 . -6) (undo-tree-id560 . -6) (undo-tree-id561 . -6) (undo-tree-id562 . -6) (undo-tree-id563 . -6) (undo-tree-id564 . -6) (undo-tree-id565 . -6) (undo-tree-id566 . -6) (undo-tree-id567 . -6) (undo-tree-id568 . -6) (undo-tree-id569 . -6) (undo-tree-id570 . -6) (undo-tree-id571 . -6) (undo-tree-id572 . -6) (undo-tree-id573 . -6) (undo-tree-id574 . -6) (undo-tree-id575 . -6) (undo-tree-id576 . -6) (undo-tree-id577 . -6) (undo-tree-id578 . -6) (undo-tree-id579 . -6) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) (undo-tree-id583 . -6) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -6) (undo-tree-id587 . -6) 3324) nil (26419 29839 548554 724000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3317) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 3318) nil (26419 29839 548499 314000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4162) (undo-tree-id912 . -2) 4164 (t 26419 29839 551271 219000)) nil (26419 29847 776201 315000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4157) (undo-tree-id911 . -5) 4162) nil (26419 29847 776199 803000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4148) (undo-tree-id910 . -9) 4157) nil (26419 29847 776198 524000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4142) (undo-tree-id909 . -6) 4148) nil (26419 29847 776197 132000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4136) (undo-tree-id908 . -6) 4142) nil (26419 29847 776195 144000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4135) (undo-tree-id907 . -1) 4136) nil (26419 29847 776191 114000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4852) (undo-tree-id918 . -2) 4854 (t 26419 29847 777244 228000)) nil (26419 29855 257915 576000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4847) (undo-tree-id917 . -5) 4852) nil (26419 29855 257914 134000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4838) (undo-tree-id916 . -9) 4847) nil (26419 29855 257912 772000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4832) (undo-tree-id915 . -6) 4838) nil (26419 29855 257911 400000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4826) (undo-tree-id914 . -6) 4832) nil (26419 29855 257909 224000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4825) (undo-tree-id913 . -1) 4826) nil (26419 29855 257905 247000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5769) (undo-tree-id924 . -2) 5771 (t 26419 29855 256375 227000)) nil (26419 29862 621750 830000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5764) (undo-tree-id923 . -5) 5769) nil (26419 29862 621749 181000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5755) (undo-tree-id922 . -9) 5764) nil (26419 29862 621747 426000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5749) (undo-tree-id921 . -6) 5755) nil (26419 29862 621746 30000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5743) (undo-tree-id920 . -6) 5749) nil (26419 29862 621743 954000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5742) (undo-tree-id919 . -1) 5743) nil (26419 29862 621739 222000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5943) (undo-tree-id930 . -2) 5945 (t 26419 29862 625516 857000)) nil (26419 29868 670386 872000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5938) (undo-tree-id929 . -5) 5943) nil (26419 29868 670385 330000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5929) (undo-tree-id928 . -9) 5938) nil (26419 29868 670383 839000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5923) (undo-tree-id927 . -6) 5929) nil (26419 29868 670382 65000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5917) (undo-tree-id926 . -6) 5923) nil (26419 29868 670380 87000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -5916) (undo-tree-id925 . -1) 5917) nil (26419 29868 670374 794000) 0 nil])
([nil nil ((#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6238) (undo-tree-id937 . -1) 6239 (t 26419 29868 670908 363000)) nil (26419 29875 525983 983000) 0 nil])
([nil nil ((#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6237) (undo-tree-id936 . -1) 6238) nil (26419 29875 525982 433000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6232) (undo-tree-id935 . -5) 6237) nil (26419 29875 525981 92000) 0 nil])
([nil nil ((#("tangle ./" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 6 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6223) (undo-tree-id934 . -9) 6232) nil (26419 29875 525979 547000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6217) (undo-tree-id933 . -6) 6223) nil (26419 29875 525978 34000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6211) (undo-tree-id932 . -6) 6217) nil (26419 29875 525976 183000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6210) (undo-tree-id931 . -1) 6211) nil (26419 29875 525972 95000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6990) (undo-tree-id943 . -2) 6992 (t 26419 29875 526600 228000)) nil (26419 29883 95812 16000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6985) (undo-tree-id942 . -5) 6990) nil (26419 29883 95810 423000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6976) (undo-tree-id941 . -9) 6985) nil (26419 29883 95808 857000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6970) (undo-tree-id940 . -6) 6976) nil (26419 29883 95807 547000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6964) (undo-tree-id939 . -6) 6970) nil (26419 29883 95805 827000) 0 nil])
([nil nil ((#("src " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6960) (undo-tree-id938 . -4) 6964) nil (26419 29883 95803 302000) 0 nil])
([nil nil ((6960 . 6963)) nil (26419 29883 95793 300000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7284) (undo-tree-id949 . -2) 7286 (t 26419 29883 99229 737000)) nil (26419 29892 171962 483000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7279) (undo-tree-id948 . -5) 7284) nil (26419 29892 171960 444000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7270) (undo-tree-id947 . -9) 7279) nil (26419 29892 171959 137000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7264) (undo-tree-id946 . -6) 7270) nil (26419 29892 171956 57000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7258) (undo-tree-id945 . -6) 7264) nil (26419 29892 171952 794000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7257) (undo-tree-id944 . -1) 7258) nil (26419 29892 171945 291000) 0 nil])
([nil nil ((#("el" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7599) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) 7601 (t 26419 29892 174726 711000)) nil (26419 29895 921616 856000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7594) (undo-tree-id1211 . -5) (undo-tree-id1212 . -5) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (undo-tree-id1215 . -5) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) (undo-tree-id1218 . -5) (undo-tree-id1219 . -5) (undo-tree-id1220 . -5) (undo-tree-id1221 . -5) (undo-tree-id1222 . -5) (undo-tree-id1223 . -5) (undo-tree-id1224 . -5) (undo-tree-id1225 . -5) (undo-tree-id1226 . -5) (undo-tree-id1227 . -5) (undo-tree-id1228 . -5) (undo-tree-id1229 . -5) (undo-tree-id1230 . -5) (undo-tree-id1231 . -5) (undo-tree-id1232 . -5) (undo-tree-id1233 . -5) (undo-tree-id1234 . -5) (undo-tree-id1235 . -5) (undo-tree-id1236 . -5) (undo-tree-id1237 . -5) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) (undo-tree-id1243 . -5) (undo-tree-id1244 . -5) 7599) nil (26419 29895 921606 212000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7585) (undo-tree-id1166 . -9) (undo-tree-id1167 . -9) (undo-tree-id1168 . -9) (undo-tree-id1169 . -9) (undo-tree-id1170 . -9) (undo-tree-id1171 . -9) (undo-tree-id1172 . -9) (undo-tree-id1173 . -9) (undo-tree-id1174 . -9) (undo-tree-id1175 . -9) (undo-tree-id1176 . -9) (undo-tree-id1177 . -9) (undo-tree-id1178 . -9) (undo-tree-id1179 . -9) (undo-tree-id1180 . -9) (undo-tree-id1181 . -9) (undo-tree-id1182 . -9) (undo-tree-id1183 . -9) (undo-tree-id1184 . -9) (undo-tree-id1185 . -9) (undo-tree-id1186 . -9) (undo-tree-id1187 . -9) (undo-tree-id1188 . -9) (undo-tree-id1189 . -9) (undo-tree-id1190 . -9) (undo-tree-id1191 . -9) (undo-tree-id1192 . -9) (undo-tree-id1193 . -9) (undo-tree-id1194 . -9) (undo-tree-id1195 . -9) (undo-tree-id1196 . -9) (undo-tree-id1197 . -9) (undo-tree-id1198 . -9) (undo-tree-id1199 . -9) (undo-tree-id1200 . -9) (undo-tree-id1201 . -9) (undo-tree-id1202 . -9) (undo-tree-id1203 . -9) (undo-tree-id1204 . -9) (undo-tree-id1205 . -9) (undo-tree-id1206 . -9) (undo-tree-id1207 . -9) (undo-tree-id1208 . -9) (undo-tree-id1209 . -9) (undo-tree-id1210 . -9) 7594) nil (26419 29895 921586 907000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7579) (undo-tree-id1105 . -6) (undo-tree-id1106 . -6) (undo-tree-id1107 . -6) (undo-tree-id1108 . -6) (undo-tree-id1109 . -6) (undo-tree-id1110 . -6) (undo-tree-id1111 . -6) (undo-tree-id1112 . -6) (undo-tree-id1113 . -6) (undo-tree-id1114 . -6) (undo-tree-id1115 . -6) (undo-tree-id1116 . -6) (undo-tree-id1117 . -6) (undo-tree-id1118 . -6) (undo-tree-id1119 . -6) (undo-tree-id1120 . -6) (undo-tree-id1121 . -6) (undo-tree-id1122 . -6) (undo-tree-id1123 . -6) (undo-tree-id1124 . -6) (undo-tree-id1125 . -6) (undo-tree-id1126 . -6) (undo-tree-id1127 . -6) (undo-tree-id1128 . -6) (undo-tree-id1129 . -6) (undo-tree-id1130 . -6) (undo-tree-id1131 . -6) (undo-tree-id1132 . -6) (undo-tree-id1133 . -6) (undo-tree-id1134 . -6) (undo-tree-id1135 . -6) (undo-tree-id1136 . -6) (undo-tree-id1137 . -6) (undo-tree-id1138 . -6) (undo-tree-id1139 . -6) (undo-tree-id1140 . -6) (undo-tree-id1141 . -6) (undo-tree-id1142 . -6) (undo-tree-id1143 . -6) (undo-tree-id1144 . -6) (undo-tree-id1145 . -6) (undo-tree-id1146 . -6) (undo-tree-id1147 . -6) (undo-tree-id1148 . -6) (undo-tree-id1149 . -6) (undo-tree-id1150 . -6) (undo-tree-id1151 . -6) (undo-tree-id1152 . -6) (undo-tree-id1153 . -6) (undo-tree-id1154 . -6) (undo-tree-id1155 . -6) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) (undo-tree-id1160 . -6) (undo-tree-id1161 . -6) (undo-tree-id1162 . -6) (undo-tree-id1163 . -6) (undo-tree-id1164 . -6) (undo-tree-id1165 . -6) 7585) nil (26419 29895 921562 642000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7573) (undo-tree-id1033 . -6) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (undo-tree-id1036 . -6) (undo-tree-id1037 . -6) (undo-tree-id1038 . -6) (undo-tree-id1039 . -6) (undo-tree-id1040 . -6) (undo-tree-id1041 . -6) (undo-tree-id1042 . -6) (undo-tree-id1043 . -6) (undo-tree-id1044 . -6) (undo-tree-id1045 . -6) (undo-tree-id1046 . -6) (undo-tree-id1047 . -6) (undo-tree-id1048 . -6) (undo-tree-id1049 . -6) (undo-tree-id1050 . -6) (undo-tree-id1051 . -6) (undo-tree-id1052 . -6) (undo-tree-id1053 . -6) (undo-tree-id1054 . -6) (undo-tree-id1055 . -6) (undo-tree-id1056 . -6) (undo-tree-id1057 . -6) (undo-tree-id1058 . -6) (undo-tree-id1059 . -6) (undo-tree-id1060 . -6) (undo-tree-id1061 . -6) (undo-tree-id1062 . -6) (undo-tree-id1063 . -6) (undo-tree-id1064 . -6) (undo-tree-id1065 . -6) (undo-tree-id1066 . -6) (undo-tree-id1067 . -6) (undo-tree-id1068 . -6) (undo-tree-id1069 . -6) (undo-tree-id1070 . -6) (undo-tree-id1071 . -6) (undo-tree-id1072 . -6) (undo-tree-id1073 . -6) (undo-tree-id1074 . -6) (undo-tree-id1075 . -6) (undo-tree-id1076 . -6) (undo-tree-id1077 . -6) (undo-tree-id1078 . -6) (undo-tree-id1079 . -6) (undo-tree-id1080 . -6) (undo-tree-id1081 . -6) (undo-tree-id1082 . -6) (undo-tree-id1083 . -6) (undo-tree-id1084 . -6) (undo-tree-id1085 . -6) (undo-tree-id1086 . -6) (undo-tree-id1087 . -6) (undo-tree-id1088 . -6) (undo-tree-id1089 . -6) (undo-tree-id1090 . -6) (undo-tree-id1091 . -6) (undo-tree-id1092 . -6) (undo-tree-id1093 . -6) (undo-tree-id1094 . -6) (undo-tree-id1095 . -6) (undo-tree-id1096 . -6) (undo-tree-id1097 . -6) (undo-tree-id1098 . -6) (undo-tree-id1099 . -6) (undo-tree-id1100 . -6) (undo-tree-id1101 . -6) (undo-tree-id1102 . -6) (undo-tree-id1103 . -6) (undo-tree-id1104 . -6) 7579) nil (26419 29895 921528 503000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7572) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) 7573) nil (26419 29920 430551 203000) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7675) (undo-tree-id1316 . -1) (#("r" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -7676) (undo-tree-id1317 . -1) (#("c" 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -7677) (undo-tree-id1318 . -1) 7678 (t 26419 29895 923940 977000)) nil (26419 29937 93756 848000) 0 nil] [nil nil ((#("src


**

#+" 0 3 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 3 4 (face org-block-end-line fontified t) 4 10 (fontified t) 10 12 (font-lock-fontified t fontified t)) . -7617) (undo-tree-id1263 . -12) (undo-tree-id1264 . -12) (undo-tree-id1265 . -12) (undo-tree-id1266 . -12) (undo-tree-id1267 . -12) (undo-tree-id1268 . -12) (undo-tree-id1269 . -12) (undo-tree-id1270 . -12) (undo-tree-id1271 . -12) (undo-tree-id1272 . -12) (undo-tree-id1273 . -12) (undo-tree-id1274 . -12) (undo-tree-id1275 . -12) (undo-tree-id1276 . -12) (undo-tree-id1277 . -12) (undo-tree-id1278 . -12) (undo-tree-id1279 . -12) (undo-tree-id1280 . -12) 7629 (#("begin_" 0 6 (face org-meta-line font-lock-fontified t fontified t)) . -7629) (undo-tree-id1281 . -6) (undo-tree-id1282 . -6) (undo-tree-id1283 . -6) (undo-tree-id1284 . -6) (undo-tree-id1285 . -6) (undo-tree-id1286 . -6) (undo-tree-id1287 . -6) 7635 (#("src " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7635) (undo-tree-id1288 . -4) 7639 (#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7639) (undo-tree-id1289 . -6) 7645 (#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7645) (undo-tree-id1290 . -6) 7651 (#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7651) (undo-tree-id1291 . -9) 7660 (#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7660) (undo-tree-id1292 . -5) 7665 (#("el

#+" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 2 3 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 3 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7665) (undo-tree-id1293 . -6) 7671 (#("end_" 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -7671) (undo-tree-id1294 . -4) 7675 (#("src" 0 3 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -7675) (undo-tree-id1295 . -3) 7678 (t 26419 29895 923940 977000)) ((7617 . 7678)) (26419 29917 274269 769000) 0 nil])
([nil nil ((#("end_" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7671) (undo-tree-id1315 . -4) 7675) nil (26419 29937 93754 369000) 0 nil])
nil
([nil nil ((#("el

#+" 0 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 2 3 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 3 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7665) (undo-tree-id1314 . -6) 7671) nil (26419 29937 93753 193000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7660) (undo-tree-id1313 . -5) 7665) nil (26419 29937 93751 688000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7651) (undo-tree-id1312 . -9) 7660) nil (26419 29937 93750 393000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7645) (undo-tree-id1311 . -6) 7651) nil (26419 29937 93749 182000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7639) (undo-tree-id1310 . -6) 7645) nil (26419 29937 93747 925000) 0 nil])
([nil nil ((#("src " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7635) (undo-tree-id1309 . -4) 7639) nil (26419 29937 93746 794000) 0 nil])
([nil nil ((#("begin_" 0 6 (face org-meta-line font-lock-fontified t fontified t)) . -7629) (undo-tree-id1308 . -6) 7635) nil (26419 29937 93745 496000) 0 nil])
([nil nil ((#("
" 0 1 (face org-block-end-line fontified t)) . -7620) (undo-tree-id1299 . -1) (#("
" 0 1 (fontified t)) . -7621) (undo-tree-id1300 . -1) (#("
" 0 1 (fontified t)) . -7622) (undo-tree-id1301 . -1) (#("*" 0 1 (fontified t)) . -7623) (undo-tree-id1302 . -1) (#("*" 0 1 (fontified t)) . -7624) (undo-tree-id1303 . -1) (#("
" 0 1 (fontified t)) . -7625) (undo-tree-id1304 . -1) (#("
" 0 1 (fontified t)) . -7626) (undo-tree-id1305 . -1) (#("#" 0 1 (face font-lock-comment-face font-lock-fontified t fontified t)) . -7627) (undo-tree-id1306 . -1) (#("+" 0 1 (font-lock-fontified t fontified t)) . -7628) (undo-tree-id1307 . -1) 7629) nil (26419 29937 93743 579000) 0 nil])
([nil nil ((#("
" 0 1 (face org-block-end-line src-block t font-lock-fontified t fontified t)) . -7620) (undo-tree-id1297 . 1) (undo-tree-id1298 . -1) 7621) nil (26419 29937 93735 825000) 0 nil])
([nil nil ((7620 . 7621)) nil (26419 29937 93733 102000) 0 nil])
([nil nil ((#("
" 0 1 (face org-block-end-line font-lock-fontified t fontified t)) . -7620) (undo-tree-id1296 . -1) 7621) nil (26419 29937 93731 472000) 0 nil])
([nil nil ((7621 . 7622)) nil (26419 29937 93721 486000) 0 nil])
([nil nil ((#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7744) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) 7745 (t 26419 29937 94508 892000)) nil (26419 29942 386066 556000) 0 nil])
([nil nil ((#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7743) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) 7744) nil (26419 29942 386053 94000) 0 nil])
([nil nil ((#("init." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7738) (undo-tree-id1639 . -5) (undo-tree-id1640 . -5) (undo-tree-id1641 . -5) (undo-tree-id1642 . -5) (undo-tree-id1643 . -5) (undo-tree-id1644 . -5) (undo-tree-id1645 . -5) (undo-tree-id1646 . -5) (undo-tree-id1647 . -5) (undo-tree-id1648 . -5) (undo-tree-id1649 . -5) (undo-tree-id1650 . -5) (undo-tree-id1651 . -5) (undo-tree-id1652 . -5) (undo-tree-id1653 . -5) (undo-tree-id1654 . -5) (undo-tree-id1655 . -5) (undo-tree-id1656 . -5) (undo-tree-id1657 . -5) (undo-tree-id1658 . -5) (undo-tree-id1659 . -5) (undo-tree-id1660 . -5) (undo-tree-id1661 . -5) (undo-tree-id1662 . -5) (undo-tree-id1663 . -5) (undo-tree-id1664 . -5) (undo-tree-id1665 . -5) (undo-tree-id1666 . -5) (undo-tree-id1667 . -5) (undo-tree-id1668 . -5) (undo-tree-id1669 . -5) (undo-tree-id1670 . -5) (undo-tree-id1671 . -5) (undo-tree-id1672 . -5) (undo-tree-id1673 . -5) (undo-tree-id1674 . -5) (undo-tree-id1675 . -5) (undo-tree-id1676 . -5) (undo-tree-id1677 . -5) (undo-tree-id1678 . -5) (undo-tree-id1679 . -5) (undo-tree-id1680 . -5) (undo-tree-id1681 . -5) (undo-tree-id1682 . -5) (undo-tree-id1683 . -5) (undo-tree-id1684 . -5) (undo-tree-id1685 . -5) (undo-tree-id1686 . -5) (undo-tree-id1687 . -5) (undo-tree-id1688 . -5) 7743) nil (26419 29942 386031 265000) 0 nil])
([nil nil ((#("tangle ./" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7729) (undo-tree-id1578 . -9) (undo-tree-id1579 . -9) (undo-tree-id1580 . -9) (undo-tree-id1581 . -9) (undo-tree-id1582 . -9) (undo-tree-id1583 . -9) (undo-tree-id1584 . -9) (undo-tree-id1585 . -9) (undo-tree-id1586 . -9) (undo-tree-id1587 . -9) (undo-tree-id1588 . -9) (undo-tree-id1589 . -9) (undo-tree-id1590 . -9) (undo-tree-id1591 . -9) (undo-tree-id1592 . -9) (undo-tree-id1593 . -9) (undo-tree-id1594 . -9) (undo-tree-id1595 . -9) (undo-tree-id1596 . -9) (undo-tree-id1597 . -9) (undo-tree-id1598 . -9) (undo-tree-id1599 . -9) (undo-tree-id1600 . -9) (undo-tree-id1601 . -9) (undo-tree-id1602 . -9) (undo-tree-id1603 . -9) (undo-tree-id1604 . -9) (undo-tree-id1605 . -9) (undo-tree-id1606 . -9) (undo-tree-id1607 . -9) (undo-tree-id1608 . -9) (undo-tree-id1609 . -9) (undo-tree-id1610 . -9) (undo-tree-id1611 . -9) (undo-tree-id1612 . -9) (undo-tree-id1613 . -9) (undo-tree-id1614 . -9) (undo-tree-id1615 . -9) (undo-tree-id1616 . -9) (undo-tree-id1617 . -9) (undo-tree-id1618 . -9) (undo-tree-id1619 . -9) (undo-tree-id1620 . -9) (undo-tree-id1621 . -9) (undo-tree-id1622 . -9) (undo-tree-id1623 . -9) (undo-tree-id1624 . -9) (undo-tree-id1625 . -9) (undo-tree-id1626 . -9) (undo-tree-id1627 . -9) (undo-tree-id1628 . -9) (undo-tree-id1629 . -9) (undo-tree-id1630 . -9) (undo-tree-id1631 . -9) (undo-tree-id1632 . -9) (undo-tree-id1633 . -9) (undo-tree-id1634 . -9) (undo-tree-id1635 . -9) (undo-tree-id1636 . -9) (undo-tree-id1637 . -9) (undo-tree-id1638 . -9) 7738) nil (26419 29942 386002 977000) 0 nil])
([nil nil ((#("lisp :" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7723) (undo-tree-id1506 . -6) (undo-tree-id1507 . -6) (undo-tree-id1508 . -6) (undo-tree-id1509 . -6) (undo-tree-id1510 . -6) (undo-tree-id1511 . -6) (undo-tree-id1512 . -6) (undo-tree-id1513 . -6) (undo-tree-id1514 . -6) (undo-tree-id1515 . -6) (undo-tree-id1516 . -6) (undo-tree-id1517 . -6) (undo-tree-id1518 . -6) (undo-tree-id1519 . -6) (undo-tree-id1520 . -6) (undo-tree-id1521 . -6) (undo-tree-id1522 . -6) (undo-tree-id1523 . -6) (undo-tree-id1524 . -6) (undo-tree-id1525 . -6) (undo-tree-id1526 . -6) (undo-tree-id1527 . -6) (undo-tree-id1528 . -6) (undo-tree-id1529 . -6) (undo-tree-id1530 . -6) (undo-tree-id1531 . -6) (undo-tree-id1532 . -6) (undo-tree-id1533 . -6) (undo-tree-id1534 . -6) (undo-tree-id1535 . -6) (undo-tree-id1536 . -6) (undo-tree-id1537 . -6) (undo-tree-id1538 . -6) (undo-tree-id1539 . -6) (undo-tree-id1540 . -6) (undo-tree-id1541 . -6) (undo-tree-id1542 . -6) (undo-tree-id1543 . -6) (undo-tree-id1544 . -6) (undo-tree-id1545 . -6) (undo-tree-id1546 . -6) (undo-tree-id1547 . -6) (undo-tree-id1548 . -6) (undo-tree-id1549 . -6) (undo-tree-id1550 . -6) (undo-tree-id1551 . -6) (undo-tree-id1552 . -6) (undo-tree-id1553 . -6) (undo-tree-id1554 . -6) (undo-tree-id1555 . -6) (undo-tree-id1556 . -6) (undo-tree-id1557 . -6) (undo-tree-id1558 . -6) (undo-tree-id1559 . -6) (undo-tree-id1560 . -6) (undo-tree-id1561 . -6) (undo-tree-id1562 . -6) (undo-tree-id1563 . -6) (undo-tree-id1564 . -6) (undo-tree-id1565 . -6) (undo-tree-id1566 . -6) (undo-tree-id1567 . -6) (undo-tree-id1568 . -6) (undo-tree-id1569 . -6) (undo-tree-id1570 . -6) (undo-tree-id1571 . -6) (undo-tree-id1572 . -6) (undo-tree-id1573 . -6) (undo-tree-id1574 . -6) (undo-tree-id1575 . -6) (undo-tree-id1576 . -6) (undo-tree-id1577 . -6) 7729) nil (26419 29942 385970 677000) 0 nil])
([nil nil ((#("emacs-" 0 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7717) (undo-tree-id1418 . -6) (undo-tree-id1419 . -6) (undo-tree-id1420 . -6) (undo-tree-id1421 . -6) (undo-tree-id1422 . -6) (undo-tree-id1423 . -6) (undo-tree-id1424 . -6) (undo-tree-id1425 . -6) (undo-tree-id1426 . -6) (undo-tree-id1427 . -6) (undo-tree-id1428 . -6) (undo-tree-id1429 . -6) (undo-tree-id1430 . -6) (undo-tree-id1431 . -6) (undo-tree-id1432 . -6) (undo-tree-id1433 . -6) (undo-tree-id1434 . -6) (undo-tree-id1435 . -6) (undo-tree-id1436 . -6) (undo-tree-id1437 . -6) (undo-tree-id1438 . -6) (undo-tree-id1439 . -6) (undo-tree-id1440 . -6) (undo-tree-id1441 . -6) (undo-tree-id1442 . -6) (undo-tree-id1443 . -6) (undo-tree-id1444 . -6) (undo-tree-id1445 . -6) (undo-tree-id1446 . -6) (undo-tree-id1447 . -6) (undo-tree-id1448 . -6) (undo-tree-id1449 . -6) (undo-tree-id1450 . -6) (undo-tree-id1451 . -6) (undo-tree-id1452 . -6) (undo-tree-id1453 . -6) (undo-tree-id1454 . -6) (undo-tree-id1455 . -6) (undo-tree-id1456 . -6) (undo-tree-id1457 . -6) (undo-tree-id1458 . -6) (undo-tree-id1459 . -6) (undo-tree-id1460 . -6) (undo-tree-id1461 . -6) (undo-tree-id1462 . -6) (undo-tree-id1463 . -6) (undo-tree-id1464 . -6) (undo-tree-id1465 . -6) (undo-tree-id1466 . -6) (undo-tree-id1467 . -6) (undo-tree-id1468 . -6) (undo-tree-id1469 . -6) (undo-tree-id1470 . -6) (undo-tree-id1471 . -6) (undo-tree-id1472 . -6) (undo-tree-id1473 . -6) (undo-tree-id1474 . -6) (undo-tree-id1475 . -6) (undo-tree-id1476 . -6) (undo-tree-id1477 . -6) (undo-tree-id1478 . -6) (undo-tree-id1479 . -6) (undo-tree-id1480 . -6) (undo-tree-id1481 . -6) (undo-tree-id1482 . -6) (undo-tree-id1483 . -6) (undo-tree-id1484 . -6) (undo-tree-id1485 . -6) (undo-tree-id1486 . -6) (undo-tree-id1487 . -6) (undo-tree-id1488 . -6) (undo-tree-id1489 . -6) (undo-tree-id1490 . -6) (undo-tree-id1491 . -6) (undo-tree-id1492 . -6) (undo-tree-id1493 . -6) (undo-tree-id1494 . -6) (undo-tree-id1495 . -6) (undo-tree-id1496 . -6) (undo-tree-id1497 . -6) (undo-tree-id1498 . -6) (undo-tree-id1499 . -6) (undo-tree-id1500 . -6) (undo-tree-id1501 . -6) (undo-tree-id1502 . -6) (undo-tree-id1503 . -6) (undo-tree-id1504 . -6) (undo-tree-id1505 . -6) 7723) nil (26419 29942 385931 99000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7716) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) 7717) nil (26419 29942 385872 18000) 0 nil])
([nil nil ((173 . 174) (t 26419 29942 388086 368000)) nil (26419 29994 662184 722000) 0 nil])
([nil nil ((173 . 175)) nil (26419 29994 662183 640000) 0 nil])
([nil nil ((175 . 179)) nil (26419 29994 662182 211000) 0 nil])
([nil nil ((173 . 176)) nil (26419 29994 662178 592000) 0 nil])
([nil nil ((#(" " 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -25) (undo-tree-id1809 . -1) 26 (t 26419 29994 664888 968000)) nil (26419 30096 732354 77000) 0 nil])
([nil nil ((25 . 27)) nil (26419 30096 732352 27000) 0 nil])
([nil nil ((#("x" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -25) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (#("\\" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -26) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) 27) nil (26419 30096 732347 970000) 0 nil])
([nil nil ((171 . 174) (t 26419 30096 735829 594000)) nil (26419 30247 383379 449000) 0 nil])
([nil nil ((#("," 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -173) (undo-tree-id1 . -1) 174) nil (26419 30247 383378 443000) 0 nil])
([nil nil ((173 . 177)) nil (26419 30247 383376 712000) 0 nil])
([nil nil ((#("d" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -176) (undo-tree-id0 . -1) 177) nil (26419 30247 383375 148000) 0 nil])
([nil nil ((176 . 182)) nil (26419 30247 383355 883000) 0 nil])
([nil nil ((820 . 821) (t 26419 30247 382561 154000)) nil (26419 30353 753067 896000) 0 nil])
([nil nil ((#("
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -821) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 822 (821 . 822) 820) nil (26419 30353 753066 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 830 . 831) (nil fontified nil 821 . 831) (821 . 831) 820) nil (26419 30353 753046 29000) 0 nil])
([nil nil ((1370 . 1371) (t 26419 30353 755215 602000)) nil (26419 30389 175934 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1380 . 1381) (nil fontified nil 1371 . 1381) (1371 . 1381) 1370) nil (26419 30389 176267 167000) 0 nil])
([nil nil ((#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -2575) (undo-tree-id20 . -1) 2576 (2574 . 2576)) nil (26419 30475 338592 175000) 0 nil] [nil nil ((nil rear-nonsticky nil 2583 . 2584) (nil fontified nil 2574 . 2584) (2574 . 2584) 2573) ((#("emacs-lisp" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 9 10 (face org-block-begin-line font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil)) . 2574) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9) (nil rear-nonsticky t 2583 . 2584)) (26419 30389 175929 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2584 . 2585) (nil fontified nil 2575 . 2585) (2575 . 2585) 2574) nil (26419 30475 338591 31000) 0 nil])
nil
([nil nil ((#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3046) (undo-tree-id18 . -1) (#("=" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -3047) (undo-tree-id19 . -1) 3048 (3045 . 3048)) nil (26419 30475 338590 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3055 . 3056) (nil fontified nil 3046 . 3056) (3046 . 3056) 3045) nil (26419 30475 338588 373000) 0 nil])
([nil nil ((3381 . 3382)) nil (26419 30475 338587 745000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3391 . 3392) (nil fontified nil 3382 . 3392) (3382 . 3392) 3381) nil (26419 30475 338587 248000) 0 nil])
([nil nil ((4210 . 4213)) nil (26419 30475 338586 512000) 0 nil])
([nil nil ((#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4211) (undo-tree-id13 . -1) (#("=" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4212) (undo-tree-id14 . 1) (undo-tree-id15 . -1) (#("=" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4213) (undo-tree-id16 . -1) (#("=" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4214) (undo-tree-id17 . -1) 4215 (4213 . 4215)) nil (26419 30475 338585 534000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4220 . 4221) (nil fontified nil 4211 . 4221) (4211 . 4221) 4210) nil (26419 30475 338581 730000) 0 nil])
([nil nil ((#("[" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -4912) (undo-tree-id12 . -1) 4913 (4911 . 4913)) nil (26419 30475 338580 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4921 . 4922) (nil fontified nil 4912 . 4922) (4912 . 4922) 4911) nil (26419 30475 338579 586000) 0 nil])
([nil nil ((6013 . 6014)) nil (26419 30475 338578 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6023 . 6024) (nil fontified nil 6014 . 6024) (6014 . 6024) 6013) nil (26419 30475 338578 320000) 0 nil])
([nil nil ((6318 . 6319)) nil (26419 30475 338577 521000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6328 . 6329) (nil fontified nil 6319 . 6329) (6319 . 6329) 6318) nil (26419 30475 338576 953000) 0 nil])
([nil nil ((7082 . 7083)) nil (26419 30475 338576 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7092 . 7093) (nil fontified nil 7083 . 7093) (7083 . 7093) 7082) nil (26419 30475 338575 420000) 0 nil])
([nil nil ((7388 . 7390) (7387 . 7388)) nil (26419 30475 338574 542000) 0 nil])
([nil nil ((#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7388) (undo-tree-id8 . -1) (#("=" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7389) (undo-tree-id9 . 1) (undo-tree-id10 . -1) (#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -7390) (undo-tree-id11 . -1) 7391 (7390 . 7391)) nil (26419 30475 338573 30000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7397 . 7398) (nil fontified nil 7388 . 7398) (7388 . 7398) 7387) nil (26419 30475 338562 633000) 0 nil])
([nil nil ((7713 . 7714)) nil (26419 30475 338561 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7723 . 7724) (nil fontified nil 7714 . 7724) (7714 . 7724) 7713) nil (26419 30475 338561 262000) 0 nil])
([nil nil ((7868 . 7869)) nil (26419 30475 338559 961000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7878 . 7879) (nil fontified nil 7869 . 7879) (7869 . 7879) 7868) nil (26419 30475 338556 262000) 0 nil])
([nil current ((#("
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -182) (undo-tree-id21 . 1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -183) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -184) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -185) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("b" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -186) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (#("a" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -187) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("p" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -188) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -189) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#("s" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -190) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("h" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -191) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) 192 (t 26419 30475 339410 462000)) nil (26419 30499 48208 799000) 0 nil])
nil
